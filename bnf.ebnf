(* EBNF grammar (based on https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form) *)

letter = "A" | "B" | "C" | "D" | "E" | "F" | "G"
       | "H" | "I" | "J" | "K" | "L" | "M" | "N"
       | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
       | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
       | "c" | "d" | "e" | "f" | "g" | "h" | "i"
       | "j" | "k" | "l" | "m" | "n" | "o" | "p"
       | "q" | "r" | "s" | "t" | "u" | "v" | "w"
       | "x" | "y" | "z" ;

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
nonzero = digit - "0" ;

symbol = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"
       | "'" | '"' | "=" | "|" | "." | "," | ";" ;
character = letter | digit | symbol | "_" ;

identifier = letter , { letter | digit | "_" } ;
terminal = "'" , character , { character } , "'" 
         | '"' , character , { character } , '"' ;

count = nonzero , { digit } ;

lhs = identifier ;

counted = count, "*", rhs ;
exception = rhs, "-", rhs ;
optional = "[", rhs, "]" ;
repeat = "{" , rhs , "}" ;
grouping = "(" , rhs , ")" ;
alternation = rhs , "|" , rhs ;
concatenation = rhs , "," , rhs ;

rhs = counted
     | exception
     | optional
     | repetition
     | grouping
     | alternation
     | concatenation
     | identifier
     | terminal

rule = lhs , "=" , rhs , ";" ;
grammar = { rule } ;
